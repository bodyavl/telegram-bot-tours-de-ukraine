from config import ADMIN_IDS, BOT_DATA
from catalog import tours

def is_admin(user_id):
    return user_id in ADMIN_IDS

def handle_admin(bot, message):
    if not is_admin(message.from_user.id):
        bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É.")
        return
    keyboard = (
        "/add_item –ù–∞–∑–≤–∞; –û–ø–∏—Å; –¶—ñ–Ω–∞\n"
        "/remove_item ID\n"
        "/orders"
    )
    bot.send_message(message.chat.id, f"üõ† –ê–¥–º—ñ–Ω-–º–µ–Ω—é:\n{keyboard}")

def handle_add_item(bot, message):
    if not is_admin(message.from_user.id):
        return
    try:
        _, name, description, price = message.text.split(";", 3)
        item = {
            "id": len(tours) + 1,
            "name": name.strip(),
            "description": description.strip(),
            "price": float(price.strip())
        }
        tours.append(item)
        bot.send_message(message.chat.id, "‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ.")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /add_item –ù–∞–∑–≤–∞; –û–ø–∏—Å; –¶—ñ–Ω–∞")

def handle_remove_item(bot, message):
    if not is_admin(message.from_user.id):
        return
    try:
        _, id_str = message.text.split(" ", 1)
        item_id = int(id_str.strip())
        for i, item in enumerate(tours):
            if item["id"] == item_id:
                tours.pop(i)
                bot.send_message(message.chat.id, "üóë –¢–æ–≤–∞—Ä –≤–∏–¥–∞–ª–µ–Ω–æ.")
                return
        bot.send_message(message.chat.id, "‚ùå –¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /remove_item ID")

def handle_orders(bot, message):
    if not is_admin(message.from_user.id):
        return
    bot.send_message(message.chat.id, "üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞—Ä–∞–∑—ñ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –ë–î.")
